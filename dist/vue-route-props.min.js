!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("vue")):"function"==typeof define&&define.amd?define(["vue"],e):(t=t||self).VueChronos=e(t.vue)}(this,(function(t){"use strict";t=t&&t.hasOwnProperty("default")?t.default:t;const e="object"==typeof process&&"object"==typeof process.env&&"production"!==process.env.NODE_ENV,o=(t,e)=>{console.error("[VueRouteProps warn]: ",t,e)},r=t=>({}.toString.call(t)),n=(t,e)=>t.hasOwnProperty(e),u=[null,Boolean,String,Number,Array,Object];function i(){}function c(){return!0}function s(t,u){return{beforeCreate(){if(void 0!==this.$options.routeProps){(u=function({options:t={},context:r}){"[object Object]"!=={}.toString.call(t)&&o(`Options: ${t} should be an object`,r);void 0===t.inspect&&(t.inspect=!1);void 0===t.debug&&(t.debug=e);return t}({options:u,context:this})).debug&&(function({context:t}){void 0===t.$router&&o("Missing vue-router",t)}({context:this}),function({routeProps:t,context:e}){let o=!0;if("[object Object]"===r(t))for(const n in t)"[object Object]"===r(t[n])&&(o=o&&p({routeProps:t,prop:n,context:e})&&a({routeProps:t,prop:n,context:e}))}({routeProps:this.$options.routeProps,context:this})),this._routeProps={normalized:d({routeProps:this.$options.routeProps}),computed:{}};for(const e in this._routeProps.normalized)this._routeProps.computed[e]=void 0,t.util.defineReactive(this._routeProps.computed,e),y({vm:this,routeProp:e})}},watch:{$route:{immediate:!0,handler(){if(void 0===this.$options.routeProps)return;u.debug&&function({normalizedRouteProps:t,context:e}){let o=!0;for(const r in t)o=o&&l({normalizedRouteProps:t,prop:r,context:e})&&f({normalizedRouteProps:t,prop:r,context:e})&&P({normalizedRouteProps:t,prop:r,context:e})}({normalizedRouteProps:this._routeProps.normalized,context:this});const t=function({normalizedRouteProps:t,route:e,context:o}){const r={};for(const o in t)r[o]=n(e.query,o)?JSON.parse(e.query[o]):t[o].default();return r}({normalizedRouteProps:this._routeProps.normalized,route:this.$route,context:this});for(const e in t)this._routeProps.computed[e]=t[e];var e,o;u.inspect&&(e=JSON.stringify(this._routeProps.computed,null,2),o=this,console.log("[VueRouteProps log]: ",e,o))}}}}}function p({routeProps:t,prop:e,context:n}){return"[object Object]"!==r(t[e].default)&&"[object Array]"!==r(t[e].default)||(o(`Invalid default value for routeProp "${e}": routeProps with type Object/Array must use a factory function to return the default value.`,n),!1)}function a({routeProps:t,prop:e,context:u}){let i=!0;return"[object Function]"===r(t[e].validator)&&n(t[e],"default")&&(i="[object Function]"===r(t[e].default)?t[e].validator(t[e].default()):t[e].validator(t[e].default)),!1===i&&o(`Invalid routeProp: custom validator check failed for routeProp "${e}".`,u),i}function d({routeProps:t}){if("[object Array]"===r(t)){const e={};for(const o of t)e[o]={};t=e}for(const e in t)"[object Array]"===r(t[e])?t[e]={type:t[e]}:"[object Object]"!==r(t[e])&&(t[e]={type:[t[e]]});for(const e in t){if(!1===n(t[e],"required")&&(t[e].required=!1),!1===n(t[e],"type")?t[e].type=u:"[object Array]"!==r(t[e].type)?t[e].type=[t[e].type]:0===t[e].type.length&&(t[e].type=u),!1===n(t[e],"default"))t[e].default=i;else if("[object Function]"!==r(t[e].default)){const o=t[e].default;t[e].default=function(){return o}}!1===n(t[e],"validator")&&(t[e].validator=c)}return t}function l({normalizedRouteProps:t,prop:e,context:r}){const u=n(r.$route.query,e)?JSON.parse(r.$route.query[e]):void 0;return!t[e].required||void 0!==u||(o(`Missing required routeProp: "${e}"`,r),!1)}function f({normalizedRouteProps:t,prop:e,context:u}){const i=n(u.$route.query,e)?JSON.parse(u.$route.query[e]):t[e].default();let c=!0;if(void 0===i?!0===t[e].required&&(c=!1):null===i?!1===t[e].type.includes(null)&&(c=!1):!1===t[e].type.includes(Object.getPrototypeOf(i).constructor)&&(c=!1),!1===c){const n=[];for(const o of t[e].type)null===o?n.push("null"):n.push(/function ([^(]+)/.exec(o.toString())[1]);const c=r(i).slice(8,-1);o(`Invalid routeProp: type check failed for routeProp "${e}". Expected ${n.join(", ")}, got ${c} with value ${JSON.stringify(i)}.`,u)}return c}function P({normalizedRouteProps:t,prop:e,context:r}){const u=n(r.$route.query,e)?JSON.parse(r.$route.query[e]):t[e].default();return!((t[e].required||n(r.$route.query,e))&&!t[e].validator(u,e))||(o(`Invalid routeProp: custom validator check failed for routeProp "${e}".`,r),!1)}function y({vm:t,routeProp:e}){Object.defineProperty(t,e,{configurable:!0,enumerable:!0,set(){o("Avoid mutating a routeProp directly since the value will be overwritten whenever the route changes. Instead, use a data or computed property based on the routeProp's "+`value. Prop being mutated: "${e}"`,t)},get:()=>t._routeProps.computed[e]})}return{install:function(t,e){t.mixin(s(t,e))}}}));
